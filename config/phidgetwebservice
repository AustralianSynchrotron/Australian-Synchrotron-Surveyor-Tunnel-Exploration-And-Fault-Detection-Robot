#!/bin/sh

### BEGIN INIT INFO
# Provides:             phidgetwebservice
# Required-Start:       $network $remote_fs
# Required-Stop:        $network $remote_fs
# Should-Start:         avahi
# Should-Stop:          avahi
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Phidget Webservice
# Description:          Phidget Webservice for controlling Phidgets over the network
### END INIT INFO

DESC="Phidget Webservice"
NAME=phidgetwebservice
BIN=phidgetwebservice21
DAEMON=/usr/bin/$BIN
PIDFILE=/var/run/$NAME.pid
CFG=/etc/default/$NAME

# Gracefully exit if the package has been removed
test -x $DAEMON || exit 0

# Nice display colours
red="\033[0;31m"
green="\033[0;32m"
NC="\033[0m"

# Load config
pws_port="5001"
pws_serverid=""
pws_password=""
[ -f $CFG ] && . $CFG

start() {
        [ -z "$pws_port" ] || OPTIONS="-p $pws_port "
        [ -z "$pws_password" ] || OPTIONS="$OPTIONS-P $pws_password "

        if [ -z "$pws_serverid" ]; then
                OPTIONS="$OPTIONS -n $( hostname )"
        else
                OPTIONS="$OPTIONS -n $pws_serverid"
        fi

        echo
        echo -n "Starting $DESC: "
        start-stop-daemon -S -b -q -p $PIDFILE -m -x $DAEMON -- $OPTIONS && echo "${green}OK...${NC}" || echo "${red}ALREADY RUNNING...${NC}"
        echo
}

stop() {
        echo
        echo -n "Stopping $DESC: "
        start-stop-daemon -K -q -p $PIDFILE -x $DAEMON && echo "${green}OK...${NC}" || echo "${red}NOT RUNNING...${NC}"
        echo
}

status() {
        case "$(pidof phidgetwebservice21 | wc -w)" in
        0)
                echo
                echo "$DESC: is ${red}Not Running...${NC}"
                echo
                ;;
        1)
                echo
                echo "$DESC: is ${green}Running...${NC}"
                echo
                ;;
        *)
                echo
                echo "$DESC: an ${red}Error Occurred...${NC}"
                echo
        esac
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart|force-reload)
        stop
        sleep 1
        start
        ;;
    *)
        echo "Usage: $0 {start|stop|restart}"

esac

exit 0
