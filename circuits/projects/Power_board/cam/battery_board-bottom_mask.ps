%!PS-Adobe-3.0 EPSF-3.0
%%Title: EAGLE Drawing C:/Users/Stephen/Documents/GitHub/Australian-Synchrotron-Surveyor-Tunnel-Exploration-And-Fault-Detection-Robot/circuits/projects/Power_board/battery_board.brd
%%Creator: EAGLE
%%Pages: 1
%%BoundingBox: 0 0 472 330
%%EndComments

% Coordinate transfer:

/EU { 254 div 0.072 mul } def
/inch { 72 mul } def

% Linestyle:

1 setlinecap
1 setlinejoin

% Drawing functions:

/l {  % draw a line
   /lw exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   newpath
   x1 EU y1 EU moveto
   x2 EU y2 EU lineto
   lw EU setlinewidth
   stroke
   } def

/h {  % draw a hole
   /d  exch def
   /y  exch def
   /x  exch def
   d 0 gt {
     newpath
     x EU y EU d 2 div EU 0 360 arc
     currentgray dup
     1 exch sub setgray
     fill
     setgray
     } if
   } def

/b {  % draw a bar
   /an exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   /w2 x2 x1 sub 2 div EU def
   /h2 y2 y1 sub 2 div EU def
   gsave
   x1 x2 add 2 div EU y1 y2 add 2 div EU translate
   an rotate
   newpath
   w2     h2     moveto
   w2 neg h2     lineto
   w2 neg h2 neg lineto
   w2     h2 neg lineto
   closepath
   fill
   grestore
   } def

/c {  % draw a circle
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   newpath
   lw EU setlinewidth
   x EU y EU rd EU 0 360 arc
   stroke
   } def

/a {  % draw an arc
   /lc exch def
   /ae exch def
   /as exch def
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   lw rd 2 mul gt {
     /rd rd lw 2 div add 2 div def
     /lw rd 2 mul def
     } if
   currentlinecap currentlinejoin
   lc setlinecap 0 setlinejoin
   newpath
   lw EU setlinewidth
   x EU y EU rd EU as ae arc
   stroke
   setlinejoin setlinecap
   } def

/p {  % draw a pie
   /d exch def
   /y exch def
   /x exch def
   newpath
   x EU y EU d 2 div EU 0 360 arc
   fill
   } def

/edge { 0.20710678119 mul } def

/o {  % draw an octagon
   /an exch def
   /dy exch def
   /dx exch def
   /y  exch def
   /x  exch def
   gsave
   x EU y EU translate
   an dx dy lt { 90 add /dx dy /dy dx def def } if rotate
   newpath
      0 dx 2 div sub EU                    0 dy edge  add EU moveto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div add EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div add EU lineto
      0 dx 2 div add EU                    0 dy edge  add EU lineto
      0 dx 2 div add EU                    0 dy edge  sub EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div sub EU lineto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div sub EU lineto
      0 dx 2 div sub EU                    0 dy edge  sub EU lineto
   closepath
   fill
   grestore
   } def

% the real drawing size:

/MinDrawX -1503172 EU def
/MinDrawY  -7747 EU def
/MaxDrawX   4572 EU def
/MaxDrawY 1004697 EU def

% the usable page size:

/LeftMargin 0.25 inch def  % change these if drawing gets clipped!
/BotMargin  0.25 inch def
/PageWidth   6.2992 inch def
/PageHeight  4.3307 inch def

% are we going to rotate?:

/RotateDrawing 0 0 ne def

% Media size functions:

/AbortMessage {  % Show a message in a box and stop printing
   /h 100 def
   /Courier findfont 12 scalefont setfont
   mediawidth pagemargin sub h 1 setpage
   newpath
   0 0 moveto
   0 h rlineto
   mediawidth pagemargin sub 0 rlineto
   0 h neg rlineto
   closepath
   5 setlinewidth
   stroke
   newpath 50 60 moveto (ERROR: Jobsize exceeds physical printing area!) show
   newpath 50 40 moveto (       Job has been aborted!) show
   showpage
   stop
   } def

/SelectPage {  % Select the page identified by Row and Column
   /Column exch def
   /Row    exch def

   % the actually exposed area (if the machine knows these parameters!):

   /DrawX MaxDrawX MinDrawX sub def
   /DrawY MaxDrawY MinDrawY sub def
   statusdict /setpage known
   statusdict /mediawidth known and
   statusdict /medialength known and
   statusdict /pagemargin known and {
      % this is for machines that can tell the media size:
      statusdict begin
         /MediaW mediawidth pagemargin sub def
         DrawX DrawY ge {
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            } ifelse
         end
      }{
      % this is for machines that can NOT tell the media size:
      % (Ghostscript doesn't like this!)
      /Product product length string def
      /i 0 def
      product { dup 97 lt { 32 add } if Product exch i exch put /i i 1 add def } forall 
      Product (ghostscript) search dup /IsGhostscript exch def
      { pop pop } if
      pop
      IsGhostscript not {
         statusdict /setpage known {
            statusdict begin
               RotateDrawing {
                  LeftMargin PageHeight add BotMargin DrawY add
                  }{
                  BotMargin DrawY add LeftMargin DrawX add 
                  } ifelse
               0 setpage
               end
            } if
         } if
      % set clipping boundary:
      newpath
      LeftMargin BotMargin moveto
      0 PageHeight rlineto
      PageWidth  0 rlineto
      0 PageHeight neg rlineto
      closepath
      clip
      % set the origin:
      LeftMargin BotMargin translate
      RotateDrawing {
         0 PageHeight translate
         -90 rotate
         PageHeight Column mul neg PageWidth Row mul neg translate
         }{
         PageWidth Column mul neg PageHeight Row mul neg translate
         } ifelse
      } ifelse
   % move the lower left corner of the drawing to the origin:
   MinDrawX neg MinDrawY neg translate
   
   % Linestyle:
   
   1 setlinecap
   1 setlinejoin
   
   } def

% TheDrawing

gsave 0 0 SelectPage
0 0 -1500000 0 0 l
-1500000 0 -1500000 1000000 0 l
-1500000 1000000 0 1000000 0 l
0 1000000 0 0 0 l
-692935 916790 -659615 950110 0.0 b
-626275 933450 33320 p
-854860 916790 -821540 950110 0.0 b
-788200 933450 33320 p
-625475 782105 -625475 760945 31320 l
-600075 782105 -600075 760945 31320 l
-574675 782105 -574675 760945 31320 l
-600075 621665 15000 0 c
-600075 621665 40160 p
-1241425 66675 35160 35160 180.0 o
-1279525 66675 35160 35160 180.0 o
-1241425 174625 30160 30160 0.0 o
-1190625 174625 30160 30160 0.0 o
-1282700 174625 30160 30160 180.0 o
-1333500 174625 30160 30160 180.0 o
-89685 704065 -56365 737385 270.0 b
-73025 670725 33320 p
-86510 523090 -53190 556410 270.0 b
-69850 489750 33320 p
-849845 593725 -871005 593725 31320 l
-849845 568325 -871005 568325 31320 l
-849845 542925 -871005 542925 31320 l
-1010285 568325 15000 0 c
-1010285 568325 40160 p
-1292225 927100 45160 45160 0.0 o
-1242225 927100 45160 45160 0.0 o
-1192225 927100 45160 45160 0.0 o
-1362075 552450 30160 p
-1387475 552450 30160 p
-1362075 631825 30160 p
-1387475 631825 30160 p
-1168400 552450 35160 35160 180.0 o
-1320800 552450 35160 35160 180.0 o
-1168400 631825 35160 35160 180.0 o
-1320800 631825 35160 35160 180.0 o
-50000 950000 15000 0 c
-50000 950000 40160 p
-1450000 950000 15000 0 c
-1450000 950000 40160 p
-1450000 50000 15000 0 c
-1450000 50000 40160 p
-50000 50000 15000 0 c
-50000 50000 40160 p
-423060 913615 -389740 946935 0.0 b
-356400 930275 33320 p
-257960 913615 -224640 946935 0.0 b
-191300 930275 33320 p
-869950 66675 35160 35160 180.0 o
-908050 66675 35160 35160 180.0 o
-869950 174625 30160 30160 0.0 o
-819150 174625 30160 30160 0.0 o
-911225 174625 30160 30160 180.0 o
-962025 174625 30160 30160 180.0 o
-508000 66675 35160 35160 180.0 o
-546100 66675 35160 35160 180.0 o
-501650 174625 30160 30160 0.0 o
-450850 174625 30160 30160 0.0 o
-546100 174625 30160 30160 180.0 o
-596900 174625 30160 30160 180.0 o
-1085850 927100 45160 45160 0.0 o
-1035850 927100 45160 45160 0.0 o
-985850 927100 45160 45160 0.0 o
-806450 730250 30480 p
-781050 730250 30480 p
-755650 730250 30480 p
-501650 266145 -501650 286305 30320 l
-527050 266145 -527050 286305 30320 l
-552450 266145 -552450 286305 30320 l
-400050 309880 12700 0 c
-400050 309880 35560 p
-654050 309880 12700 0 c
-654050 309880 35560 p
-869950 266145 -869950 286305 30320 l
-895350 266145 -895350 286305 30320 l
-920750 266145 -920750 286305 30320 l
-768350 309880 12700 0 c
-768350 309880 35560 p
-1022350 309880 12700 0 c
-1022350 309880 35560 p
-1238250 266145 -1238250 286305 30320 l
-1263650 266145 -1263650 286305 30320 l
-1289050 266145 -1289050 286305 30320 l
-1136650 309880 12700 0 c
-1136650 309880 35560 p
-1390650 309880 12700 0 c
-1390650 309880 35560 p
-1050210 756365 -1019890 786685 180.0 b
-1256585 756365 -1226265 786685 180.0 b
-942260 756365 -911940 786685 180.0 b
-764460 543640 -734140 573960 180.0 b
-1370885 819865 -1340565 850185 180.0 b
-1151810 819865 -1121490 850185 180.0 b
-1145460 680165 -1115140 710485 180.0 b
-478710 861140 -448390 891460 180.0 b
-246935 515065 -216615 545385 180.0 b
-307260 861140 -276940 891460 180.0 b
-231060 680165 -200740 710485 180.0 b
showpage grestore
