%!PS-Adobe-3.0 EPSF-3.0
%%Title: EAGLE Drawing C:/Users/Stephen/Documents/GitHub/Australian-Synchrotron-Surveyor-Tunnel-Exploration-And-Fault-Detection-Robot/circuits/projects/Power_board/battery_board.brd
%%Creator: EAGLE
%%Pages: 1
%%BoundingBox: 0 0 472 330
%%EndComments

% Coordinate transfer:

/EU { 254 div 0.072 mul } def
/inch { 72 mul } def

% Linestyle:

1 setlinecap
1 setlinejoin

% Drawing functions:

/l {  % draw a line
   /lw exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   newpath
   x1 EU y1 EU moveto
   x2 EU y2 EU lineto
   lw EU setlinewidth
   stroke
   } def

/h {  % draw a hole
   /d  exch def
   /y  exch def
   /x  exch def
   d 0 gt {
     newpath
     x EU y EU d 2 div EU 0 360 arc
     currentgray dup
     1 exch sub setgray
     fill
     setgray
     } if
   } def

/b {  % draw a bar
   /an exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   /w2 x2 x1 sub 2 div EU def
   /h2 y2 y1 sub 2 div EU def
   gsave
   x1 x2 add 2 div EU y1 y2 add 2 div EU translate
   an rotate
   newpath
   w2     h2     moveto
   w2 neg h2     lineto
   w2 neg h2 neg lineto
   w2     h2 neg lineto
   closepath
   fill
   grestore
   } def

/c {  % draw a circle
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   newpath
   lw EU setlinewidth
   x EU y EU rd EU 0 360 arc
   stroke
   } def

/a {  % draw an arc
   /lc exch def
   /ae exch def
   /as exch def
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   lw rd 2 mul gt {
     /rd rd lw 2 div add 2 div def
     /lw rd 2 mul def
     } if
   currentlinecap currentlinejoin
   lc setlinecap 0 setlinejoin
   newpath
   lw EU setlinewidth
   x EU y EU rd EU as ae arc
   stroke
   setlinejoin setlinecap
   } def

/p {  % draw a pie
   /d exch def
   /y exch def
   /x exch def
   newpath
   x EU y EU d 2 div EU 0 360 arc
   fill
   } def

/edge { 0.20710678119 mul } def

/o {  % draw an octagon
   /an exch def
   /dy exch def
   /dx exch def
   /y  exch def
   /x  exch def
   gsave
   x EU y EU translate
   an dx dy lt { 90 add /dx dy /dy dx def def } if rotate
   newpath
      0 dx 2 div sub EU                    0 dy edge  add EU moveto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div add EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div add EU lineto
      0 dx 2 div add EU                    0 dy edge  add EU lineto
      0 dx 2 div add EU                    0 dy edge  sub EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div sub EU lineto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div sub EU lineto
      0 dx 2 div sub EU                    0 dy edge  sub EU lineto
   closepath
   fill
   grestore
   } def

% the real drawing size:

/MinDrawX  -2540 EU def
/MinDrawY  -2540 EU def
/MaxDrawX 1502540 EU def
/MaxDrawY 1002540 EU def

% the usable page size:

/LeftMargin 0.25 inch def  % change these if drawing gets clipped!
/BotMargin  0.25 inch def
/PageWidth   6.2992 inch def
/PageHeight  4.3307 inch def

% are we going to rotate?:

/RotateDrawing 0 0 ne def

% Media size functions:

/AbortMessage {  % Show a message in a box and stop printing
   /h 100 def
   /Courier findfont 12 scalefont setfont
   mediawidth pagemargin sub h 1 setpage
   newpath
   0 0 moveto
   0 h rlineto
   mediawidth pagemargin sub 0 rlineto
   0 h neg rlineto
   closepath
   5 setlinewidth
   stroke
   newpath 50 60 moveto (ERROR: Jobsize exceeds physical printing area!) show
   newpath 50 40 moveto (       Job has been aborted!) show
   showpage
   stop
   } def

/SelectPage {  % Select the page identified by Row and Column
   /Column exch def
   /Row    exch def

   % the actually exposed area (if the machine knows these parameters!):

   /DrawX MaxDrawX MinDrawX sub def
   /DrawY MaxDrawY MinDrawY sub def
   statusdict /setpage known
   statusdict /mediawidth known and
   statusdict /medialength known and
   statusdict /pagemargin known and {
      % this is for machines that can tell the media size:
      statusdict begin
         /MediaW mediawidth pagemargin sub def
         DrawX DrawY ge {
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            } ifelse
         end
      }{
      % this is for machines that can NOT tell the media size:
      % (Ghostscript doesn't like this!)
      /Product product length string def
      /i 0 def
      product { dup 97 lt { 32 add } if Product exch i exch put /i i 1 add def } forall 
      Product (ghostscript) search dup /IsGhostscript exch def
      { pop pop } if
      pop
      IsGhostscript not {
         statusdict /setpage known {
            statusdict begin
               RotateDrawing {
                  LeftMargin PageHeight add BotMargin DrawY add
                  }{
                  BotMargin DrawY add LeftMargin DrawX add 
                  } ifelse
               0 setpage
               end
            } if
         } if
      % set clipping boundary:
      newpath
      LeftMargin BotMargin moveto
      0 PageHeight rlineto
      PageWidth  0 rlineto
      0 PageHeight neg rlineto
      closepath
      clip
      % set the origin:
      LeftMargin BotMargin translate
      RotateDrawing {
         0 PageHeight translate
         -90 rotate
         PageHeight Column mul neg PageWidth Row mul neg translate
         }{
         PageWidth Column mul neg PageHeight Row mul neg translate
         } ifelse
      } ifelse
   % move the lower left corner of the drawing to the origin:
   MinDrawX neg MinDrawY neg translate
   
   % Linestyle:
   
   1 setlinecap
   1 setlinejoin
   
   } def

% TheDrawing

gsave 0 0 SelectPage
0 0 1500000 0 0 l
1500000 0 1500000 1000000 0 l
1500000 1000000 0 1000000 0 l
0 1000000 0 0 0 l
774700 914400 37032 37032 180.0 o
724700 914400 37032 37032 180.0 o
990600 914400 37032 37032 180.0 o
940600 914400 37032 37032 180.0 o
1257300 914400 37032 37032 180.0 o
1207300 914400 37032 37032 180.0 o
622900 520000 32032 p
572500 595600 32032 p
673300 595600 32032 p
824500 595600 32032 p
824500 520000 32032 p
673300 520000 32032 p
572500 520000 32032 p
622900 595600 32032 p
550550 317500 567050 317500 18532 l
550550 292100 567050 292100 18532 l
550550 266700 567050 266700 18532 l
708660 292100 15000 0 c
708660 292100 32032 p
612084 216084 734116 368116 270.0 b
329010 660400 344090 660400 17112 l
329010 635000 344090 635000 17112 l
329010 609600 344090 609600 17112 l
63500 647700 27032 27032 0.0 o
63500 609600 27032 27032 0.0 o
247650 571500 22032 22032 180.0 o
196850 571500 22032 22032 180.0 o
247650 698500 22032 22032 180.0 o
196850 698500 22032 22032 180.0 o
469900 76200 37032 37032 0.0 o
519900 76200 37032 37032 0.0 o
241300 76200 37032 37032 0.0 o
291300 76200 37032 37032 0.0 o
842650 317500 859150 317500 18532 l
842650 292100 859150 292100 18532 l
842650 266700 859150 266700 18532 l
1000760 292100 15000 0 c
1000760 292100 32032 p
904184 216084 1026216 368116 270.0 b
296550 869950 313050 869950 18532 l
296550 844550 313050 844550 18532 l
296550 819150 313050 819150 18532 l
454660 844550 15000 0 c
454660 844550 32032 p
358084 768534 480116 920566 270.0 b
825500 654050 32032 32032 0.0 o
622300 812800 32032 32032 0.0 o
825500 812800 32032 32032 0.0 o
889000 63500 37032 37032 0.0 o
939000 63500 37032 37032 0.0 o
989000 63500 37032 37032 0.0 o
1295400 647700 22032 p
1320800 647700 22032 p
1295400 546100 22032 p
1320800 546100 22032 p
1295400 368300 22032 p
1320800 368300 22032 p
1295400 457200 22032 p
1320800 457200 22032 p
1244600 546100 27032 27032 180.0 o
1092200 546100 27032 27032 180.0 o
1092200 368300 27032 27032 0.0 o
1244600 368300 27032 27032 0.0 o
1092200 457200 27032 27032 0.0 o
1244600 457200 27032 27032 0.0 o
1244600 730250 27032 27032 180.0 o
1092200 730250 27032 27032 180.0 o
1244600 647700 27032 27032 180.0 o
1092200 647700 27032 27032 180.0 o
1308100 730250 32032 32032 0.0 o
50000 950000 15000 0 c
50000 950000 32032 p
1450000 950000 15000 0 c
1450000 950000 32032 p
1450000 50000 15000 0 c
1450000 50000 32032 p
50000 50000 15000 0 c
50000 50000 32032 p
95250 450850 37032 37032 0.0 o
95250 400850 37032 37032 0.0 o
95250 330200 37032 37032 0.0 o
95250 280200 37032 37032 0.0 o
1092200 596900 27032 27032 0.0 o
1193800 596900 27032 27032 0.0 o
571500 469900 32032 p
571500 673100 32032 p
290830 236220 32032 p
199390 378460 32032 p
411480 330200 32032 p
520700 222250 32032 p
showpage grestore
