%!PS-Adobe-3.0 EPSF-3.0
%%Title: EAGLE Drawing C:/Users/Stephen/Documents/GitHub/Australian-Synchrotron-Surveyor-Tunnel-Exploration-And-Fault-Detection-Robot/circuits/projects/battery_display/battery_monitor.brd
%%Creator: EAGLE
%%Pages: 1
%%BoundingBox: 0 0 330 245
%%EndComments

% Coordinate transfer:

/EU { 254 div 0.072 mul } def
/inch { 72 mul } def

% Linestyle:

1 setlinecap
1 setlinejoin

% Drawing functions:

/l {  % draw a line
   /lw exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   newpath
   x1 EU y1 EU moveto
   x2 EU y2 EU lineto
   lw EU setlinewidth
   stroke
   } def

/h {  % draw a hole
   /d  exch def
   /y  exch def
   /x  exch def
   d 0 gt {
     newpath
     x EU y EU d 2 div EU 0 360 arc
     currentgray dup
     1 exch sub setgray
     fill
     setgray
     } if
   } def

/b {  % draw a bar
   /an exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   /w2 x2 x1 sub 2 div EU def
   /h2 y2 y1 sub 2 div EU def
   gsave
   x1 x2 add 2 div EU y1 y2 add 2 div EU translate
   an rotate
   newpath
   w2     h2     moveto
   w2 neg h2     lineto
   w2 neg h2 neg lineto
   w2     h2 neg lineto
   closepath
   fill
   grestore
   } def

/c {  % draw a circle
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   newpath
   lw EU setlinewidth
   x EU y EU rd EU 0 360 arc
   stroke
   } def

/a {  % draw an arc
   /lc exch def
   /ae exch def
   /as exch def
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   lw rd 2 mul gt {
     /rd rd lw 2 div add 2 div def
     /lw rd 2 mul def
     } if
   currentlinecap currentlinejoin
   lc setlinecap 0 setlinejoin
   newpath
   lw EU setlinewidth
   x EU y EU rd EU as ae arc
   stroke
   setlinejoin setlinecap
   } def

/p {  % draw a pie
   /d exch def
   /y exch def
   /x exch def
   newpath
   x EU y EU d 2 div EU 0 360 arc
   fill
   } def

/edge { 0.20710678119 mul } def

/o {  % draw an octagon
   /an exch def
   /dy exch def
   /dx exch def
   /y  exch def
   /x  exch def
   gsave
   x EU y EU translate
   an dx dy lt { 90 add /dx dy /dy dx def def } if rotate
   newpath
      0 dx 2 div sub EU                    0 dy edge  add EU moveto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div add EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div add EU lineto
      0 dx 2 div add EU                    0 dy edge  add EU lineto
      0 dx 2 div add EU                    0 dy edge  sub EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div sub EU lineto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div sub EU lineto
      0 dx 2 div sub EU                    0 dy edge  sub EU lineto
   closepath
   fill
   grestore
   } def

% the real drawing size:

/MinDrawX  -2540 EU def
/MinDrawY  -2540 EU def
/MaxDrawX 1002540 EU def
/MaxDrawY 772540 EU def

% the usable page size:

/LeftMargin 0.25 inch def  % change these if drawing gets clipped!
/BotMargin  0.25 inch def
/PageWidth   4.3307 inch def
/PageHeight  3.1496 inch def

% are we going to rotate?:

/RotateDrawing 0 0 ne def

% Media size functions:

/AbortMessage {  % Show a message in a box and stop printing
   /h 100 def
   /Courier findfont 12 scalefont setfont
   mediawidth pagemargin sub h 1 setpage
   newpath
   0 0 moveto
   0 h rlineto
   mediawidth pagemargin sub 0 rlineto
   0 h neg rlineto
   closepath
   5 setlinewidth
   stroke
   newpath 50 60 moveto (ERROR: Jobsize exceeds physical printing area!) show
   newpath 50 40 moveto (       Job has been aborted!) show
   showpage
   stop
   } def

/SelectPage {  % Select the page identified by Row and Column
   /Column exch def
   /Row    exch def

   % the actually exposed area (if the machine knows these parameters!):

   /DrawX MaxDrawX MinDrawX sub def
   /DrawY MaxDrawY MinDrawY sub def
   statusdict /setpage known
   statusdict /mediawidth known and
   statusdict /medialength known and
   statusdict /pagemargin known and {
      % this is for machines that can tell the media size:
      statusdict begin
         /MediaW mediawidth pagemargin sub def
         DrawX DrawY ge {
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            } ifelse
         end
      }{
      % this is for machines that can NOT tell the media size:
      % (Ghostscript doesn't like this!)
      /Product product length string def
      /i 0 def
      product { dup 97 lt { 32 add } if Product exch i exch put /i i 1 add def } forall 
      Product (ghostscript) search dup /IsGhostscript exch def
      { pop pop } if
      pop
      IsGhostscript not {
         statusdict /setpage known {
            statusdict begin
               RotateDrawing {
                  LeftMargin PageHeight add BotMargin DrawY add
                  }{
                  BotMargin DrawY add LeftMargin DrawX add 
                  } ifelse
               0 setpage
               end
            } if
         } if
      % set clipping boundary:
      newpath
      LeftMargin BotMargin moveto
      0 PageHeight rlineto
      PageWidth  0 rlineto
      0 PageHeight neg rlineto
      closepath
      clip
      % set the origin:
      LeftMargin BotMargin translate
      RotateDrawing {
         0 PageHeight translate
         -90 rotate
         PageHeight Column mul neg PageWidth Row mul neg translate
         }{
         PageWidth Column mul neg PageHeight Row mul neg translate
         } ifelse
      } ifelse
   % move the lower left corner of the drawing to the origin:
   MinDrawX neg MinDrawY neg translate
   
   % Linestyle:
   
   1 setlinecap
   1 setlinejoin
   
   } def

% TheDrawing

gsave 0 0 SelectPage
0 0 1000000 0 0 l
1000000 0 1000000 770000 0 l
1000000 770000 0 770000 0 l
0 770000 0 0 0 l
304800 284226 304800 299974 25908 l
330200 284226 330200 299974 25908 l
355600 284226 355600 299974 25908 l
381000 284226 381000 299974 25908 l
406400 284226 406400 299974 25908 l
431800 284226 431800 299974 25908 l
457200 284226 457200 299974 25908 l
482600 284226 482600 299974 25908 l
508000 284226 508000 299974 25908 l
533400 284226 533400 299974 25908 l
558800 284226 558800 299974 25908 l
584200 284226 584200 299974 25908 l
609600 284226 609600 299974 25908 l
635000 284226 635000 299974 25908 l
635000 360426 635000 376174 25908 l
609600 360426 609600 376174 25908 l
584200 360426 584200 376174 25908 l
558800 360426 558800 376174 25908 l
533400 360426 533400 376174 25908 l
508000 360426 508000 376174 25908 l
482600 360426 482600 376174 25908 l
457200 360426 457200 376174 25908 l
431800 360426 431800 376174 25908 l
406400 360426 406400 376174 25908 l
381000 360426 381000 376174 25908 l
355600 360426 355600 376174 25908 l
330200 360426 330200 376174 25908 l
304800 360426 304800 376174 25908 l
508000 215900 26924 p
482600 215900 26924 p
457200 215900 26924 p
377110 584200 359490 584200 27780 l
377110 609600 359490 609600 27780 l
377110 635000 359490 635000 27780 l
218440 609600 16510 0 c
218440 609600 43180 p
927100 533400 40160 p
927100 482600 40160 p
927100 419100 40160 p
927100 368300 40160 p
850900 495300 28780 p
749300 495300 28780 p
622300 673100 28160 28160 180.0 o
647700 673100 28160 p
482600 673100 28160 28160 180.0 o
508000 673100 28160 p
708660 495300 26780 p
637540 495300 26780 p
749300 231140 26780 p
749300 302260 26780 p
787400 231140 26780 p
787400 302260 26780 p
508000 546100 25160 p
406400 546100 25160 p
533400 495300 25160 p
431800 495300 25160 p
850900 330200 28780 p
850900 228600 28780 p
696722 99822 725678 128778 90.0 b
736600 114300 28956 p
762000 114300 28956 p
787400 114300 28956 p
609600 114300 28956 p
635000 114300 28956 p
660400 114300 28956 p
76200 457200 28956 p
76200 482600 28956 p
88900 292100 25160 p
88900 393700 25160 p
143510 171450 161290 196850 270.0 b
92710 171450 110490 196850 270.0 b
143510 209550 161290 234950 270.0 b
92710 209550 110490 234950 270.0 b
495300 114300 28956 p
520700 114300 28956 p
546100 114300 28956 p
75000 75000 15000 0 c
75000 75000 40160 p
925000 75000 15000 0 c
925000 75000 40160 p
75000 695000 15000 0 c
75000 695000 40160 p
925000 695000 15000 0 c
925000 695000 40160 p
368300 123698 368300 104902 28956 l
342900 123698 342900 104902 28956 l
317500 123698 317500 104902 28956 l
292100 123698 292100 104902 28956 l
266700 123698 266700 104902 28956 l
241300 123698 241300 104902 28956 l
203200 215900 25160 p
254000 215900 25160 p
533400 254000 26780 p
454660 254000 26780 p
355600 63500 26780 p
662940 657860 26780 p
248920 393700 26780 p
546100 146050 26780 p
472440 635000 26780 p
375920 215900 26780 p
330200 261620 26780 p
438150 171450 26780 p
711200 152400 26780 p
406400 251460 26780 p
736600 152400 26780 p
412750 323850 26780 p
762000 152400 26780 p
635000 215900 26780 p
698500 215900 26780 p
showpage grestore
